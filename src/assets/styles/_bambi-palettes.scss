@use "sass:map";
@use "@angular/material" as mat;

@mixin divider($theme) {
	$color-config: mat.get-color-config($theme);
	$primary-palette: map.get($color-config, "primary");
	mat-divider {
		border-top-color: mat.get-color-from-palette($primary-palette, 500) !important;
	}
}

@mixin chips($theme) {
	$color-config: mat.get-color-config($theme);
	$primary-palette: map.get($color-config, "primary");
	$accent-palette: map.get($color-config, "accent");
	.record-details-wrapper {
		.mat-mdc-standard-chip.mdc-evolution-chip--disabled {
			background-color: mat.get-color-from-palette($primary-palette);
			* {
				color: #000;
			}
		}
	}
	#product-edit-form {
		mat-chip-row {
			background-color: mat.get-color-from-palette($accent-palette);
			* {
				color: #000;
			}
		}
	}
}

@mixin dialogs($theme, $isDarkTheme) {
	$color-config: mat.get-color-config($theme);
	$accent-palette: map.get($color-config, "accent");

	.dialog-header-wrapper {
		background-color: mat.get-color-from-palette($accent-palette);

		@if $isDarkTheme {
			.dialog-header-title {
				* {
					color: #000;
				}
			}
		}
	}
}

@mixin buttons($theme, $isDarkTheme) {
	@if $isDarkTheme {
		.mat-primary.mat-mdc-button-base:not(:disabled),
		.mat-accent.mat-mdc-button-base:not(:disabled) {
			* {
				color: #000;
			}
		}

		mat-checkbox.mat-primary:not(.mat-mdc-checkbox-disabled),
		mat-checkbox.mat-accent:not(.mat-mdc-checkbox-disabled) {
			.mdc-checkbox {
				* {
					color: #000;
				}
			}
		}
	}
}

@mixin menu($theme, $isDarkTheme) {
	$color-config: mat.get-color-config($theme);
	$primary-palette: map.get($color-config, "primary");
	$accent-palette: map.get($color-config, "accent");

	#entries-wrapper {
		background-color: mat.get-color-from-palette($accent-palette, 400);
		@if $isDarkTheme {
			color: #000;
		}
	}

	#closed-menu-wrapper,
	#open-menu-wrapper {
		.menu-entry {
			&.menu-toggler {
				background-color: mat.get-color-from-palette($primary-palette);
			}
			&.main-entry {
				&:hover {
					background-color: rgba(0, 0, 0, 0.15);
				}
			}
			&.sub-entry {
				&:hover {
					background-color: rgb(0, 0, 0, 0.15);
				}
			}
		}
	}

	@if $isDarkTheme {
		#closed-menu-wrapper,
		#open-menu-wrapper {
			.menu-entry {
				&.main-entry {
					&:hover {
						background-color: rgb(255, 255, 255, 0.3);
					}
				}
				&.sub-entry {
					&:hover {
						background-color: rgb(255, 255, 255, 0.3);
					}
				}
			}
		}
	}
}

@mixin formfields($theme, $isDarkTheme: false) {
	@if $isDarkTheme {
		.mdc-text-field--outlined:not(.mdc-text-field--disabled) {
			.mdc-notched-outline__leading,
			.mdc-notched-outline__notch,
			.mdc-notched-outline__trailing {
				border-color: rgba(255, 255, 255, 0.2);
			}
		}
	}
}

@mixin imagepicker($theme) {
	$color-config: mat.get-color-config($theme);
	$accent-palette: map.get($color-config, "accent");

	.img-picker-pic-wrapper {
		border-color: mat.get-color-from-palette($accent-palette);
	}
}

@mixin header($theme, $isDarkTheme: false) {
	$color-config: mat.get-color-config($theme);
	$primary-palette: map.get($color-config, "primary");

	#header-wrapper {
		background-color: mat.get-color-from-palette($primary-palette);
	}

	@if $isDarkTheme {
		.mat-mdc-mini-fab[disabled][disabled] {
			--mdc-fab-container-color: rgba(0, 0, 0, 0.12);
		}
		.mainform-header {
			.header-title {
				* {
					color: #fff;
				}
			}
		}
	}
}

@mixin theme($theme, $isDarkTheme: false) {
	$color-config: mat.get-color-config($theme);
	@if $color-config != null {
		@include divider($theme);
		@include menu($theme, $isDarkTheme);
		@include header($theme, $isDarkTheme);
		@include formfields($theme, $isDarkTheme);
		@include buttons($theme, $isDarkTheme);
		@include dialogs($theme, $isDarkTheme);
		@include chips($theme);
		@include imagepicker($theme);
	}
}
